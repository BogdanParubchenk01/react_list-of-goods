{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reverse","setState","reset","sortAlphabet","ALPHABET","sortLength","LENGTH","this","listGoods","goods","visibleGoods","sort","gA","gB","localeCompare","length","getReorderedGoods","resetVisible","className","type","classNames","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAgDE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEK,MAAQ,WACN,EAAKD,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QAfzB,EAmBEI,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUL,EAASW,YApBvC,EAuBEC,WAAa,WACX,EAAKJ,SAAS,CAAEH,SAAUL,EAASa,UAxBvC,4CA2BE,WACE,MAAiCC,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEdU,EAlEH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNa,EAAY,YAAOD,GAsBzB,OApBAC,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQf,GACN,KAAKL,EAASW,SACZ,OAAOQ,EAAGE,cAAcD,GAE1B,KAAKpB,EAASa,OACZ,OAAOM,EAAGG,OAASF,EAAGE,OAExB,QACE,OAAO,MAITlB,GACFa,EAAaV,UAMRU,EAuCaM,CAAkBtB,EAAiBa,KAAKX,OACpDqB,EAAepB,GAAcC,IAAaL,EAASM,KAEzD,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYtB,IAAaL,EAASW,WAEtCiB,QAASd,KAAKJ,aANhB,iCAWA,wBACEgB,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYtB,IAAaL,EAASa,SAEtCe,QAASd,KAAKF,WANhB,4BAWA,wBACEc,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAavB,IAEjBwB,QAASd,KAAKP,QANhB,qBAWCiB,GAEC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAASd,KAAKL,MAHhB,sBAUJ,6BACE,6BACGM,EAAUc,KAAI,SAAAC,GAAI,OACjB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,iBApFvB,GAAyBC,aC/DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.242ddd0e.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { Component } from 'react';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((gA, gB) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return gA.localeCompare(gB);\n\n      case SortType.LENGTH:\n        return gA.length - gB.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  // console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  sortAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    const listGoods = getReorderedGoods(goodsFromServer, this.state);\n    const resetVisible = isReversed || sortType !== SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.sortAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.sortLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {resetVisible\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {listGoods.map(good => (\n              <li key={good} data-cy=\"Good\">\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}